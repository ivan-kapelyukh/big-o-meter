{"version":3,"sources":["../webpack/bootstrap","../node_modules/regression/dist/regression.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","stats.js","analyseFunction.js","analysisWorker.js","parseFunction.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","define","_extends","assign","target","arguments","length","source","_toConsumableArray","arr","Array","isArray","arr2","from","DEFAULT_OPTIONS","order","precision","period","determinationCoefficient","data","results","predictions","observations","forEach","push","mean","reduce","a","observation","ssyy","difference","accum","index","prediction","residual","round","number","factor","Math","pow","methods","linear","options","sum","len","run","rise","gradient","intercept","predict","x","points","map","point","equation","r2","string","exponential","log","denominator","exp","b","coeffA","coeffB","logarithmic","power","polynomial","lhs","rhs","k","j","_l","coefficients","input","matrix","maxrow","abs","tmp","_j","_k","_j2","total","_k2","gaussianElimination","v","coeff","_i","concat","reverse","keys","accumulator","_round","supplied","obj","configurable","writable","_arrayLikeToArray","_slicedToArray","iterator","_arr","_n","_d","_e","undefined","_s","next","done","err","minLen","toString","slice","constructor","test","TypeError","fitModel","testing","filter","_","splitData","training","console","polyModel","logData","y","log2","regression","offset","model","toPrecision","class","orderToClass","trainPolyModel","expModel","powerCoeff","base","trainExpModel","testModel","m1","m2","observed","predicted","ssTotal","analyseFunction","fn","updateProgress","inputRuntimes","inputSize","totalTime","sizeGrowth","time","timedCall","min","timeGrowth","floor","varyRuntimes","start","performance","now","this","onmessage","code","e","Function","postMessage","JSON","analysisProgress"],"mappings":"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","file":"static/js/0.d245f6d4.chunk.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/big-o-meter/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n\n    return 1 - sse / ssyy;\n  }\n\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n\n        var c = [];\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n          c.push(b);\n          b = 0;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      var string = 'y = ';\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import regression from \"regression\";\r\n\r\nexport function fitModel(data) {\r\n  const [training, testing] = splitData(data);\r\n\r\n  console.log(\"Training:\");\r\n  console.log(training);\r\n  console.log(\"Testing:\");\r\n  console.log(testing);\r\n\r\n  const polyModel = trainPolyModel(training);\r\n  const expModel = trainExpModel(training);\r\n\r\n  console.log(\"Poly model:\");\r\n  console.log(polyModel);\r\n  console.log(\"Exp Model:\");\r\n  console.log(expModel);\r\n\r\n  polyModel.r2 = testModel(polyModel, testing);\r\n  expModel.r2 = testModel(expModel, testing);\r\n\r\n  console.log(`Poly r2: ${polyModel.r2}`);\r\n  console.log(`Exp r2: ${expModel.r2}`);\r\n\r\n  return [polyModel, expModel].reduce((m1, m2) => (m2.r2 > m1.r2 ? m2 : m1));\r\n}\r\n\r\n// Take third for testing, rest for training.\r\n// Use largest runtime for testing: most discriminatory.\r\nexport function splitData(data) {\r\n  const n = data.length;\r\n  const testing = data.filter((_, i) => (n - 1 - i) % 3 === 0);\r\n  const training = data.filter((_, i) => (n - 1 - i) % 3 !== 0);\r\n  return [training, testing];\r\n}\r\n\r\nexport function trainPolyModel(data) {\r\n  const logData = data\r\n    .filter(([x, y]) => x > 0 && y > 0)\r\n    .map(([x, y]) => [Math.log2(x), Math.log2(y)]);\r\n  const [gradient, _] = regression.linear(logData, {\r\n    precision: 10,\r\n  }).equation;\r\n\r\n  console.log(`Real poly grad: ${gradient}`);\r\n\r\n  // Power is integer, so need new optimal offset given rounded gradient.\r\n  const power = Math.round(gradient);\r\n  const offset =\r\n    logData.map(([x, y]) => y - power * x).reduce((a, b) => a + b, 0.0) /\r\n    logData.length;\r\n\r\n  const coeff = Math.pow(2, offset);\r\n  const model = { power, coeff };\r\n  model.toString = () =>\r\n    `${+coeff.toPrecision(2)} * x ^ ${+power.toPrecision(2)}`;\r\n  model.predict = (x) => coeff * Math.pow(x, power);\r\n  model.class = orderToClass(power);\r\n\r\n  return model;\r\n}\r\n\r\nfunction orderToClass(order) {\r\n  switch (order) {\r\n    case 0:\r\n      return \"constant\";\r\n    case 1:\r\n      return \"linear\";\r\n    case 2:\r\n      return \"quadratic\";\r\n    case 3:\r\n      return \"cubic\";\r\n    default:\r\n      return `polynomial order ${order}`;\r\n  }\r\n}\r\n\r\nexport function trainExpModel(data) {\r\n  const base = 2;\r\n\r\n  const logData = data\r\n    .filter(([_, y]) => y > 0)\r\n    .map(([x, y]) => [x, Math.log(y) / Math.log(base)]);\r\n  const [gradient, intercept] = regression.linear(logData, {\r\n    precision: 10,\r\n  }).equation;\r\n\r\n  const coeff = Math.pow(base, intercept);\r\n  const powerCoeff = gradient;\r\n\r\n  const model = { base, coeff, powerCoeff };\r\n  model.toString = () =>\r\n    `${+coeff.toPrecision(2)} * ${base} ^ (${+powerCoeff.toPrecision(2)} * x)`;\r\n  model.predict = (x) => coeff * Math.pow(base, powerCoeff * x);\r\n  model.class = \"exponential\";\r\n\r\n  return model;\r\n}\r\n\r\nexport function testModel(model, data) {\r\n  const observed = data.map(([_, y]) => y);\r\n  const predicted = data.map(([x, _]) => model.predict(x));\r\n  return r2(observed, predicted);\r\n}\r\n\r\nexport function r2(observed, predicted) {\r\n  const mean = observed.reduce((a, b) => a + b, 0.0) / observed.length;\r\n  const ssTotal = observed\r\n    .map((y) => Math.pow(y - mean, 2))\r\n    .reduce((a, b) => a + b, 0.0);\r\n  const ssResidual = observed\r\n    .map((y, i) => Math.pow(y - predicted[i], 2))\r\n    .reduce((a, b) => a + b, 0.0);\r\n\r\n  return 1 - ssResidual / ssTotal;\r\n}\r\n\r\nexport function rmse(observed, predicted) {\r\n  const n = observed.length;\r\n  return Math.sqrt(\r\n    observed\r\n      .map((y, i) => Math.pow(y - predicted[i], 2))\r\n      .reduce((a, b) => a + b) /\r\n      (1.0 * n)\r\n  );\r\n}\r\n","import { fitModel } from \"./stats\";\r\n\r\nexport function analyseFunction(fn, updateProgress) {\r\n  const inputRuntimes = varyRuntimes(fn, updateProgress);\r\n  const model = fitModel(inputRuntimes);\r\n  return [inputRuntimes, model];\r\n}\r\n\r\nexport function varyRuntimes(fn, updateProgress) {\r\n  const TIME_LIMIT = 8000;\r\n\r\n  let inputSize = 0;\r\n  let totalTime = 0;\r\n  let inputRuntimes = [];\r\n  let sizeGrowth = 1.1;\r\n\r\n  while (totalTime < TIME_LIMIT) {\r\n    const input = generateInput(inputSize);\r\n    const time = timedCall(fn, input);\r\n\r\n    inputRuntimes.push([inputSize, time]);\r\n    totalTime += time;\r\n\r\n    // Once we get to TIME_LIMIT, almost done analysing!\r\n    updateProgress(Math.min(0.95, totalTime / TIME_LIMIT));\r\n\r\n    // Grow or cut growthFactor to keep reasonable runtime growth rate.\r\n    const FAST_SIZE_GROWTH = 1.1;\r\n    const SLOW_SIZE_GROWTH = 1.01;\r\n    const TIME_GROWTH_THRESHOLD = 1.4;\r\n\r\n    if (inputRuntimes.length >= 2) {\r\n      const timeGrowth =\r\n        inputRuntimes[inputRuntimes.length - 1][1] /\r\n        inputRuntimes[inputRuntimes.length - 2][1];\r\n      if (timeGrowth < TIME_GROWTH_THRESHOLD) {\r\n        sizeGrowth = FAST_SIZE_GROWTH;\r\n      } else {\r\n        sizeGrowth = SLOW_SIZE_GROWTH;\r\n      }\r\n    }\r\n\r\n    inputSize = Math.floor(sizeGrowth * inputSize) + 1;\r\n  }\r\n\r\n  // Filter out very low runtimes: those are less robust.\r\n  const MIN_TIME = 100;\r\n  inputRuntimes = inputRuntimes.filter(([inputSize, time]) => time >= MIN_TIME);\r\n\r\n  return inputRuntimes;\r\n}\r\n\r\nexport function timedCall(fn, input) {\r\n  const start = performance.now();\r\n  const result = fn.call(this, input);\r\n  const end = performance.now();\r\n  return end - start;\r\n}\r\n\r\nexport function generateInput(size) {\r\n  return size;\r\n}\r\n\r\n/* TODO:\r\n\r\nNew thread\r\nTimeout\r\nCan propagate actual function result around easily if need be\r\nGo through planned input sizes many times and take medians at end\r\nFigure out: is it statistically wrong to choose new input vals based on output of old ones?\r\nFigure out: (0, 0) - is it implicitly included, and should it be?\r\n\r\n*/\r\n","import { analyseFunction } from \"./analyseFunction.js\";\r\nimport { parseFunction } from \"./parseFunction.js\";\r\n\r\nonmessage = (e) => {\r\n  const updateProgress = (analysisProgress) => {\r\n    postMessage(JSON.stringify({ analysisProgress }));\r\n  };\r\n\r\n  const fn = parseFunction(e.data);\r\n  const results = analyseFunction(fn, updateProgress);\r\n\r\n  // Serialise since result contains function object\r\n  // which cannot be cloned automatically.\r\n  postMessage(JSON.stringify({ analysisProgress: 1.0, results: results }));\r\n};\r\n","export function parseFunction(code) {\r\n  // Need to use this indirection to support recursion.\r\n  return Function(\"return \" + code)();\r\n}\r\n\r\nexport function parseName(code) {\r\n  // Get last word before opening bracket.\r\n  return code.substring(0, code.indexOf(\"(\")).trim().split(\" \").pop();\r\n}\r\n\r\nexport function parseArgument(code) {\r\n  // Get what's in between the first pair of brackets.\r\n  return code.substring(code.indexOf(\"(\") + 1, code.indexOf(\")\")).trim();\r\n}\r\n\r\nexport function parseBody(code) {\r\n  // Get what's in between the first opening bracket and last closing bracket.\r\n  return code.substring(code.indexOf(\"{\") + 1, code.lastIndexOf(\"}\"));\r\n}\r\n\r\n// TODO: don't export all functions - use e.g. rewire for testing\r\n"],"sourceRoot":""}